{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","Button","type","variant","onClick","current","List","sx","width","maxWidth","bgcolor","map","good","ListItem","ListItemText","primary","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,+FAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EA1CR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAkBzB,OAhBAD,EAAaE,MAAK,SAACC,EAAYC,GAC7B,OAAQN,GACN,KAAKT,EAASgB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKnB,EAASQ,KAGd,QACE,OAAO,MAINF,EACHK,EAAaS,UACbT,EAiBiBU,CAAkBpB,EAAiBQ,EAAUH,GAElE,OACE,qBAAKgB,UAAU,MAAf,SACGlB,EAEG,qCACE,cAACmB,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAlBS,kBAAMhB,EAAYV,EAASgB,WAetC,iCAQA,cAACO,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAzBO,kBAAMhB,EAAYV,EAASkB,SAsBpC,4BAQA,cAACK,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAhCI,kBAAMnB,GAAc,SAAAoB,GAAO,OAAKA,MA6BtC,qBAQA,cAACJ,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAvCE,WACZnB,GAAc,GACdG,EAAYV,EAASQ,OAkCb,mBAQA,cAACoB,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,OACPC,SAAU,IACVC,QAAS,oBAEXV,UAAU,QANZ,SAQGX,EAAasB,KAAI,SAAAC,GAAI,OACpB,cAACC,EAAA,EAAD,CAEEb,UAAU,cAFZ,SAIE,cAACc,EAAA,EAAD,CAAcC,QAASH,KAHlBI,uBAWb,cAACf,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAxEI,kBAAMrB,GAAa,IAqEzB,sBC9HVkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af199681.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const start = () => setIsStarted(true);\n  const sortAlphabet = () => setSortType(SortType.ALPHABET);\n  const sortLength = () => setSortType(SortType.LENGTH);\n  const reverse = () => setIsReversed(current => !current);\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {isStarted\n        ? (\n          <>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              onClick={sortAlphabet}\n            >\n              Sort alphabetically\n            </Button>\n\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              onClick={sortLength}\n            >\n              Sort by length\n            </Button>\n\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              onClick={reverse}\n            >\n              Reverse\n            </Button>\n\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              onClick={reset}\n            >\n              Reset\n            </Button>\n\n            <List\n              sx={{\n                width: '100%',\n                maxWidth: 360,\n                bgcolor: 'background.paper',\n              }}\n              className=\"Goods\"\n            >\n              {visibleGoods.map(good => (\n                <ListItem\n                  key={uuidv4()}\n                  className=\"Goods__item\"\n                >\n                  <ListItemText primary={good} />\n                </ListItem>\n              ))}\n            </List>\n          </>\n        )\n\n        : (\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            onClick={start}\n          >\n            Start\n          </Button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}